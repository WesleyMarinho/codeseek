version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: codeseek-postgres
    environment:
      POSTGRES_DB: digiserver_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 317ec4445d0b70711607
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - codeseek-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d digiserver_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: codeseek-redis
    command: redis-server --requirepass 08d0bdd400563b50d631
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - codeseek-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "08d0bdd400563b50d631", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CodeSeek Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: codeseek-app
    environment:
      # Server Configuration
      PORT: 3000
      NODE_ENV: production
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: digiserver_db
      DB_USER: postgres
      DB_PASSWORD: 317ec4445d0b70711607
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: 08d0bdd400563b50d631
      
      # Security Configuration
      SESSION_SECRET: sua_chave_secreta_muito_forte_aqui_123456789
      BCRYPT_ROUNDS: 12
      
      # Chargebee Configuration (update with your credentials)
      CHARGEBEE_SITE: seu_site_chargebee
      CHARGEBEE_API_KEY: sua_api_key_chargebee
      
      # Application Configuration
      BASE_URL: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - uploads_data:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - codeseek-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  codeseek-network:
    driver: bridge